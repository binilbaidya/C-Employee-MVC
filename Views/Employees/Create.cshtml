@model CRUDEmployeeMVC.Model.Employee

@{
    ViewBag.Title = "Create";
}

<div>
    <a href="@Url.Action("Index", "Employees")" class="btn btn-default pull-right" style="margin-top: 25px">Back to List</a>
</div>

<h2>Create</h2>

@using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Profile Picture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ProfilePicFile" class="form-control" id="emp-profile-pic"/>
                <div id="profile-error-msg"></div>
                @{
                    if (TempData.Peek("ProfileMessage") != null)
                    {
                        <h5 class="text-danger">@TempData.Peek("ProfileMessage")</h5>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Full Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", @minlength = "10" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @min = "15", @max = "70", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", (IEnumerable<SelectListItem>)ViewData["Gender"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Employees Documents", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="EmpDocFile" class="form-control" id="emp-doc-file" multiple />
                <div id="doc-error-msg"></div>
                    @{
                        if (TempData.Peek("DocMessage") != null)
                        {
                            <h5 class="text-danger">@TempData.Peek("DocMessage")</h5>
                        }
                    }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="form-submit-btn"/>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            var submit_btn = $('#form-submit-btn');
            $('#emp-profile-pic').change(function (e) {
                var profileSize = e.originalEvent.target.files[0].size;
                let fileName = e.originalEvent.target.files[0].name;
                var profileMaxSize = 2072865;
                fileName = fileName.split('.').pop();
                const supportedTypes = [ "jpg", "jpeg", "png" ];
                if (!supportedTypes.includes(fileName)) {
                    $("#profile-error-msg").text("Please upload only image file.").css("color", "red");
                    submit_btn.addClass("disabled");
                } else if (profileSize > profileMaxSize) {
                    $("#profile-error-msg").text("File size too large.").css("color", "red");
                    submit_btn.addClass("disabled");
                } else {
                    $("#profile-error-msg").remove();
                    submit_btn.removeClass("disabled");
                }
            });
            $('#emp-doc-file').change(function (e) {
                var docSize = 0;
                var typeOfFile = true;
                var noOfFiles = e.originalEvent.target.files.length;
                if (noOfFiles > 0) {
                    for (var i = 0; i < noOfFiles; i++){
                        let fileName = e.originalEvent.target.files[i].name;
                        fileName = fileName.split('.').pop();
                        const supportedTypes = ["jpg", "doc", "docx", "pdf", "jpeg", "png", 'csv', 'xlsx', 'xls'];
                        if (!supportedTypes.includes(fileName)) {
                            typeOfFile = false;
                        }
                        docSize = Number(docSize)+ Number(e.originalEvent.target.files[i].size);
                    }
                }
                var docMaxSize = 10364325;
                if (typeOfFile == false) {
                    $("#doc-error-msg").text("Please upload only document file.").css("color", "red");
                    submit_btn.addClass("disabled");
                    submit_btn.removeAttr("type");
                    submit_btn.disabled = true;

                } else if (docSize > docMaxSize) {
                    $("#doc-error-msg").text("File size too large. Please upload a total of 10MB file only.").css("color", "red");
                    submit_btn.addClass("disabled");
                    submit_btn.removeAttr("type");
                    submit_btn.disabled = true;
                } else {
                    submit_btn.removeClass("disabled");
                    $("#doc-error-msg").remove();
                    submit_btn.attr("type", "submit");
                    submit_btn.disabled = false;
                }
            });
        });
    </script>
}
